/**
 * fecha de creacion: junio de 2018
 * nombre: FFrameListaLibros
 * Su funci√≥n lista libros
 * entrada null
 * salida null
 * @author: braulio valdes 
 */
package vista;

import controlador.ControladorLibros;
import java.util.ArrayList;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import modelo.Autores;
import modelo.AutoresDAO;
import modelo.Editorial;
import modelo.EditorialDAO;
import modelo.Idioma;
import modelo.IdiomaDAO;
import modelo.Libros;



/**
 *
 * @author BRAULIOMARIANO
 */
public class JFrameListaLibros extends javax.swing.JFrame {

    /**
     * Creates new form JFrameListaCompras
     */
    
    String [] titulos = {"Serie","Isbn","Titulo","Editorial","Autor","Idioma",
        "Stock","Estado","Valor Venta","Valor Arriendo"};
    String [] campos = new String [10];
    DefaultTableModel modelTable;
    
    public JFrameListaLibros() {
        initComponents();
        this.setAlwaysOnTop(true);
        this.setLocationRelativeTo(null);
        llenarTablaConLibros();
    }
    void llenarTablaConLibros(){
        modelTable = new DefaultTableModel(null,titulos);
        ControladorLibros clibros = new ControladorLibros();
        ArrayList<Libros> lib;
        lib = clibros.consultarTodo();
        if(lib!=null){
            int largo=lib.size();
            while (largo>0){
                //extrae datos del arraylist para poblar tabla libros                
                
                AutoresDAO a = new AutoresDAO();
                int id_autor = lib.get(largo-1).getAutor();
                Autores autor = a.leerXid(id_autor);
                IdiomaDAO i = new IdiomaDAO();
                int id_idioma = lib.get(largo-1).getIdioma();
                Idioma idioma = i.leerXid(id_idioma);
                EditorialDAO edit = new EditorialDAO();
                int id_editorial = lib.get(largo-1).getEditorial();
                Editorial editorial = edit.leerXid(id_editorial);

                //Serie-Isbn-Titulo-Editorial-Autor-Idioma-Stock-Estado-$Venta-$Arriendo
                
                campos[0]=lib.get(largo-1).getSerie();
                campos[1]=lib.get(largo-1).getIsbn();
                campos[2]=lib.get(largo-1).getTitulo();
                if(editorial!=null){
                    campos[3]=editorial.getNombre();
                }else{
                    campos[3]="sin editorial";
                }
                if(autor!=null){
                    campos[4]=autor.getNombre();
                }else{
                    campos[4]="sin autor";
                }
                if(idioma!=null){
                    campos[5]=idioma.getNombre();
                }else{
                    campos[5]="sin idioma";
                }
                campos[6]=String.valueOf(lib.get(largo-1).getStock());
                int estado = lib.get(largo-1).getEstado();
                String e = "disponible";
                if (estado==0){
                    e = "no disponible";
                }
                campos[7]=e;
                campos[8]=String.valueOf(lib.get(largo-1).getPrecioVenta());
                campos[9]=String.valueOf(lib.get(largo-1).getPrecioArriendo());
                
                modelTable.addRow(campos);
                
                largo--;
            }
         jTableLibros.removeAll();
         jTableLibros.setModel(modelTable);
                 //ALINEA CELDAS TABLAS
         DefaultTableCellRenderer alinear = new DefaultTableCellRenderer();
         alinear.setHorizontalAlignment(SwingConstants.RIGHT);//.LEFT .RIGHT .CENTER
         jTableLibros.getColumnModel().getColumn(0).setCellRenderer(alinear);
         jTableLibros.getColumnModel().getColumn(1).setCellRenderer(alinear);
         jTableLibros.getColumnModel().getColumn(2).setCellRenderer(alinear);
         jTableLibros.getColumnModel().getColumn(3).setCellRenderer(alinear);
         jTableLibros.getColumnModel().getColumn(4).setCellRenderer(alinear);
         jTableLibros.getColumnModel().getColumn(5).setCellRenderer(alinear);
         jTableLibros.getColumnModel().getColumn(6).setCellRenderer(alinear);
         jTableLibros.getColumnModel().getColumn(7).setCellRenderer(alinear);
         jTableLibros.getColumnModel().getColumn(8).setCellRenderer(alinear);
         jTableLibros.getColumnModel().getColumn(9).setCellRenderer(alinear);
        }
    }

    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableLibros = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(200, 100));
        setUndecorated(true);

        jTableLibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableLibros);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText(" < L I S T A D O     D E     L I B R O S > ");

        jButton1.setText("Cerrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(168, 168, 168)
                        .addComponent(jLabel1)
                        .addGap(0, 431, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameListaLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameListaLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameListaLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameListaLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameListaLibros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableLibros;
    // End of variables declaration//GEN-END:variables
}
