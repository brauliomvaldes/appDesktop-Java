/**
 * fecha de creacion: junio de 2018
 * nombre: FArriendosLibros
 * Su función es listar historial de arriendos
 * entrada null
 * salida arriendos
 * @author: braulio valdes 
 */
package vista;

import controlador.ControladorLibros;
import controlador.ControladorPersona;
import controlador.ControladorArriendos;
import controlador.ControladorArriendosDetalle;
import controlador.ControladorParametros;
import java.awt.Color;
import java.sql.Date;
import java.sql.Time;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import static javax.print.attribute.Size2DSyntax.MM;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import modelo.Libros;
import modelo.Personas;
import modelo.Arriendos;
import modelo.ArriendosDetalle;
import modelo.Parametros;
import static vista.MenuPrincipalBiblioteca.cal;
import static vista.MenuPrincipalBiblioteca.diaSistema;
import static vista.MenuPrincipalBiblioteca.mesSistema;
import static vista.MenuPrincipalBiblioteca.yearSistema;

/**
 *
 * @author BRAULIOMARIANO
 */
public class FArriendosLibros extends javax.swing.JFrame {
    /**
    //variables para almacenar libro creado en mantenedor de libros durante la compra
    */
    FDevoluciones jFLA = new FDevoluciones();
    FPersona fp = new FPersona();
    DefaultComboBoxModel comboClientes;
    DefaultComboBoxModel comboDependientes;
    DefaultListModel modelCL = new DefaultListModel();
    String hora, fechaHoy;
    Date fechaComprobante;
    //folio Boleta Venta
    boolean esArriendo;
    long folioComprobanteArriendo;
    int dia, diaDevolucion, mes, mesDevolucion, year, yearDevolucion, hArriendo, mArriendo, sArriendo, totalArriendo;
    int[] listaLibrosArrendados;
    int librosArrendados, stockLibro, stockReal, nuevoStockArriendo, nuevoPrecio, enArriendo;
    int diasDeArriendo = 1;
    int topeDiaMes;
    int id_cliente;
    DefaultTableModel modelTableArriendos;
    String [] titulos = {"Serie","Isbn","Titulo","Stock","Valor Arriendo"};
    String [] campos = new String [5];
    int ImpuestoIva;
    
    /**
     * Creates new form FVEntasLibros
     */
    public FArriendosLibros() {
        initComponents();
        //this.setAlwaysOnTop(true);
        this.getContentPane().setBackground(Color.LIGHT_GRAY);
        this.setLocationRelativeTo(null);
        lbFechaSistema.setText(String.valueOf(diaSistema)+"/"+String.valueOf(mesSistema)+"/"+String.valueOf(yearSistema));    
        poblarFormaPago();
        poblarCuotas();
        leerParametros();
        limpiar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField8 = new javax.swing.JTextField();
        txtFolio = new javax.swing.JTextField();
        txtCliente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cmbCliente = new javax.swing.JComboBox<>();
        btnActualizarCliente = new javax.swing.JButton();
        btnAgregaCliente = new javax.swing.JButton();
        cmbFormaPago = new javax.swing.JComboBox<>();
        cmbCuotas = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListLibros = new javax.swing.JList<>();
        jLabel8 = new javax.swing.JLabel();
        txtSerie = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtPrecioArriendoDiario = new javax.swing.JTextField();
        txtTituloLibro = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        btnAgregarLibro = new javax.swing.JButton();
        txtNeto = new javax.swing.JTextField();
        btnRegistrarArriendo = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        cmbMesProceso = new javax.swing.JComboBox<>();
        cmbYearProceso = new javax.swing.JComboBox<>();
        btnCambiaSerie = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        txtIva = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtDependiente = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        cmbDependiente = new javax.swing.JComboBox<>();
        btnActualizarDependiente = new javax.swing.JButton();
        btnAgregaDependiente = new javax.swing.JButton();
        labelStock = new javax.swing.JLabel();
        cmbDiaProceso = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txtSubtotal = new javax.swing.JTextField();
        labelFechaDevolucion = new javax.swing.JLabel();
        txtDiasDeArriendo = new javax.swing.JTextField();
        txtDiasContabilizados = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableLibrosArriendos = new javax.swing.JTable();
        lbFechaSistema = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(100, 50));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtFolio.setBackground(new java.awt.Color(255, 255, 0));
        txtFolio.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtFolio.setForeground(new java.awt.Color(255, 0, 0));
        txtFolio.setCaretColor(new java.awt.Color(255, 0, 0));
        txtFolio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFolioActionPerformed(evt);
            }
        });
        getContentPane().add(txtFolio, new org.netbeans.lib.awtextra.AbsoluteConstraints(888, 40, 120, 47));

        txtCliente.setBackground(new java.awt.Color(204, 255, 255));
        txtCliente.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtCliente.setForeground(new java.awt.Color(0, 0, 255));
        txtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClienteActionPerformed(evt);
            }
        });
        getContentPane().add(txtCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, 306, -1));

        jLabel3.setText("Fecha Proceso");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 120, -1, 20));

        jLabel4.setText("NETO  $");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 470, -1, -1));

        jLabel5.setText("IDENTIFIQUE CLIENTE");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, -1, -1));

        jLabel6.setText("Forma de Pago");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 110, -1, 20));

        jLabel7.setText("Número Cuotas");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 140, -1, 20));

        cmbCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbClienteActionPerformed(evt);
            }
        });
        getContentPane().add(cmbCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 305, -1));

        btnActualizarCliente.setText("@");
        btnActualizarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarClienteActionPerformed(evt);
            }
        });
        getContentPane().add(btnActualizarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 50, 20));

        btnAgregaCliente.setText("+");
        btnAgregaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregaClienteActionPerformed(evt);
            }
        });
        getContentPane().add(btnAgregaCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 120, -1, 20));

        cmbFormaPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFormaPagoActionPerformed(evt);
            }
        });
        getContentPane().add(cmbFormaPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 110, 120, -1));

        getContentPane().add(cmbCuotas, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 140, 120, -1));

        jListLibros.setBackground(new java.awt.Color(204, 255, 204));
        jListLibros.setForeground(new java.awt.Color(51, 51, 51));
        jListLibros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListLibrosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListLibros);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 290, 350, 140));

        jLabel8.setText("REGISTRO LIBRO");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 300, -1, -1));

        txtSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSerieActionPerformed(evt);
            }
        });
        txtSerie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSerieKeyReleased(evt);
            }
        });
        getContentPane().add(txtSerie, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 330, 130, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("<LISTADO DE LIBROS INCLUIDOS EN ARRIENDO>");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 270, 350, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel11.setText("<MANTENEDOR ARRIENDO LIBROS>");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, -1, -1));
        getContentPane().add(txtPrecioArriendoDiario, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 390, 130, -1));
        getContentPane().add(txtTituloLibro, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 360, 320, -1));

        jLabel12.setText("SERIE LIBRO");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, -1, -1));

        jLabel13.setText("TITULO LIBRO");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 255));
        jLabel14.setText("DIAS CONTABILIZADOS");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 520, -1, 20));

        btnAgregarLibro.setText("AGREGA LIBRO >>>");
        btnAgregarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarLibroActionPerformed(evt);
            }
        });
        getContentPane().add(btnAgregarLibro, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 290, 180, -1));

        txtNeto.setBackground(new java.awt.Color(204, 255, 255));
        txtNeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNetoActionPerformed(evt);
            }
        });
        getContentPane().add(txtNeto, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 470, 110, -1));

        btnRegistrarArriendo.setText("Registrar Arriendo");
        btnRegistrarArriendo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarArriendoActionPerformed(evt);
            }
        });
        getContentPane().add(btnRegistrarArriendo, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 370, 130, 48));

        btnLimpiar.setText("Limpiar Campos");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 436, 130, 41));

        jButton3.setText("Cerrar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 499, 130, 45));

        cmbMesProceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMesProcesoActionPerformed(evt);
            }
        });
        getContentPane().add(cmbMesProceso, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 120, -1, -1));

        cmbYearProceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbYearProcesoActionPerformed(evt);
            }
        });
        getContentPane().add(cmbYearProceso, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 120, -1, -1));

        btnCambiaSerie.setText("CAMBIA SERIE");
        btnCambiaSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCambiaSerieActionPerformed(evt);
            }
        });
        getContentPane().add(btnCambiaSerie, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 290, 130, -1));

        jLabel20.setText("ARRIENDO DIARIO $");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, -1, -1));

        txtTotal.setBackground(new java.awt.Color(204, 255, 255));
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });
        getContentPane().add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 530, 110, -1));

        txtIva.setBackground(new java.awt.Color(204, 255, 255));
        txtIva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIvaActionPerformed(evt);
            }
        });
        getContentPane().add(txtIva, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 500, 110, -1));

        jLabel21.setText("TOTAL $");
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 530, -1, -1));

        jLabel22.setText("19% IVA $");
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 500, -1, -1));

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204)));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 460, 190, 100));

        txtDependiente.setBackground(new java.awt.Color(204, 255, 255));
        txtDependiente.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtDependiente.setForeground(new java.awt.Color(0, 0, 255));
        txtDependiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDependienteActionPerformed(evt);
            }
        });
        getContentPane().add(txtDependiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 306, -1));

        jLabel18.setText("IDENTIFIQUE DEPENDIENTE");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, -1, -1));

        cmbDependiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDependienteActionPerformed(evt);
            }
        });
        getContentPane().add(cmbDependiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, 305, -1));

        btnActualizarDependiente.setText("@");
        btnActualizarDependiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarDependienteActionPerformed(evt);
            }
        });
        getContentPane().add(btnActualizarDependiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 50, 20));

        btnAgregaDependiente.setText("+");
        btnAgregaDependiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregaDependienteActionPerformed(evt);
            }
        });
        getContentPane().add(btnAgregaDependiente, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 200, -1, 20));

        labelStock.setBackground(new java.awt.Color(255, 255, 255));
        labelStock.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        labelStock.setForeground(new java.awt.Color(0, 0, 255));
        labelStock.setText("ENTER confirma");
        getContentPane().add(labelStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 330, 151, -1));
        labelStock.getAccessibleContext().setAccessibleName("ENTER confirma");

        cmbDiaProceso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDiaProcesoActionPerformed(evt);
            }
        });
        getContentPane().add(cmbDiaProceso, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 120, -1, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 255));
        jLabel15.setText("RECIBO N°");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 50, -1, 40));

        jLabel19.setText("Dias de Arriendo");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 160, -1, 20));

        jLabel25.setText("Fecha Devolución");
        getContentPane().add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 200, -1, 20));

        txtSubtotal.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        txtSubtotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtSubtotal.setForeground(new java.awt.Color(0, 0, 255));
        txtSubtotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSubtotalActionPerformed(evt);
            }
        });
        getContentPane().add(txtSubtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 480, 140, 30));

        labelFechaDevolucion.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelFechaDevolucion.setForeground(new java.awt.Color(0, 0, 255));
        getContentPane().add(labelFechaDevolucion, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 200, 110, 20));

        txtDiasDeArriendo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDiasDeArriendoFocusLost(evt);
            }
        });
        txtDiasDeArriendo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiasDeArriendoActionPerformed(evt);
            }
        });
        getContentPane().add(txtDiasDeArriendo, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 160, 70, -1));

        txtDiasContabilizados.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        txtDiasContabilizados.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtDiasContabilizados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiasContabilizadosActionPerformed(evt);
            }
        });
        getContentPane().add(txtDiasContabilizados, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 540, 60, -1));

        jLabel23.setText("(IVA INCLUIDO)");
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 390, -1, 20));

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 0, 255));
        jLabel24.setText("SUBTOTAL");
        getContentPane().add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 460, -1, -1));

        jTableLibrosArriendos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableLibrosArriendos.setEnabled(false);
        jTableLibrosArriendos.setRowSelectionAllowed(false);
        jTableLibrosArriendos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableLibrosArriendosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableLibrosArriendos);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, 460, 148));

        lbFechaSistema.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbFechaSistema.setForeground(new java.awt.Color(0, 0, 255));
        lbFechaSistema.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        getContentPane().add(lbFechaSistema, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setText("<LIBROS EXISTENTES>");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, 150, -1));

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 0, 0));
        jLabel27.setText("*");
        getContentPane().add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 300, 20, 10));

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 0, 0));
        jLabel28.setText("*");
        getContentPane().add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 340, 20, 10));

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 0, 0));
        jLabel29.setText("*");
        getContentPane().add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 170, 20, 10));

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 0, 0));
        jLabel30.setText("*");
        getContentPane().add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, 20, 10));

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 0, 0));
        jLabel31.setText("*");
        getContentPane().add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, 20, 10));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void leerParametros(){
        ControladorParametros c = new ControladorParametros();
        Parametros p = c.leer(1);
        if(p==null){
            c.agregar();
        }else{
            ImpuestoIva=p.getImpuesto_iva();
        }
    }

 /**
 * método       : limpiar
 * entrada      : void
 * salida       : void
 * descripcion  : limpiar contenido de cajas de texto, genera 
 * busca folio arriendo, poblar calendario y poblar tablas con libros 
 */

    private void limpiar(){
        //elimina contenido
        poblarClientes();
        poblarDependientes();
        cmbCliente.setEnabled(true);
        cmbDependiente.setEnabled(true);
        txtFolio.setText("");
        txtNeto.setText("");
        txtIva.setText("");
        txtTotal.setText("");
        txtTituloLibro.setText("");
        txtSerie.setText("");
        txtPrecioArriendoDiario.setText("");
        txtCliente.setText("");
        txtDependiente.setText("");
        txtDiasDeArriendo.setText("1");
        txtSubtotal.setText("");
        txtDiasContabilizados.setText("");
        txtCliente.setEditable(false);
        txtDependiente.setEditable(false);
        txtSerie.setEditable(false);
        txtPrecioArriendoDiario.setEnabled(false);
        labelFechaDevolucion.setText("");
        cmbFormaPago.setEnabled(true);
        cmbCuotas.setEnabled(false);
        txtDiasDeArriendo.setEnabled(true);
        txtSubtotal.setEditable(false);
        cmbDiaProceso.setEnabled(true);
        cmbMesProceso.setEnabled(true);
        cmbYearProceso.setEnabled(true);
        txtTituloLibro.setEnabled(false);
        txtTituloLibro.setEditable(false);
        btnAgregarLibro.setEnabled(true);
        btnCambiaSerie.setEnabled(true);
        txtFolio.setEnabled(true);   
        btnRegistrarArriendo.setEnabled(true);
        btnLimpiar.setEnabled(true);
        modelCL.clear();
        librosArrendados=0;
        txtFolio.setEditable(false);
        txtNeto.setEditable(false);
        txtIva.setEditable(false);
        txtTotal.setEditable(false);
        jTableLibrosArriendos.setEnabled(true);
        btnActualizarCliente.setEnabled(true);
        btnActualizarDependiente.setEnabled(true);
        btnAgregaCliente.setEnabled(true);
        btnAgregaDependiente.setEnabled(true);
        txtSerie.setEditable(true);        
        buscarFolio();
        poblarCalendario();
        llenarTablaConLibros("titulo","");
    }
    
 /**
 * método       : llenarTablaConLibros
 * entrada      : nombre columna busqueda y texto a buscar
 * salida       : libro(s) buscado
 * descripcion  : poblar tabla con libros 
 */

    
    void llenarTablaConLibros(String campo, String buscado){
        stockReal = 0;
        modelTableArriendos = new DefaultTableModel(null,titulos);
        ControladorLibros clibros = new ControladorLibros();
        ArrayList<Libros> lib;
        if (campo.equals("titulo")){
            lib = clibros.consultarTodoParametroTitulo(buscado);
        }else{
            lib = clibros.consultarTodoParametroSerie(buscado);
            }
        if(lib!=null){
            int largo=lib.size();
            while (largo>0){
                stockReal=lib.get(largo-1).getStock()-lib.get(largo-1).getEnArriendo();
                //extrae datos del arraylist para poblar tabla libros                
                //Serie-Isbn-Titulo-Editorial-Autor-Idioma-Stock-Estado-$Venta-$Arriendo
                
                campos[0]=lib.get(largo-1).getSerie();
                campos[1]=lib.get(largo-1).getIsbn();
                campos[2]=lib.get(largo-1).getTitulo();
                campos[3]=String.valueOf(stockReal);
                campos[4]=String.valueOf(lib.get(largo-1).getPrecioArriendo());
                modelTableArriendos.addRow(campos);    
                largo--;
            }
         jTableLibrosArriendos.removeAll();
         jTableLibrosArriendos.setModel(modelTableArriendos);
                 //ALINEA CELDAS TABLAS
         DefaultTableCellRenderer alinear = new DefaultTableCellRenderer();
         alinear.setHorizontalAlignment(SwingConstants.RIGHT);//.LEFT .RIGHT .CENTER
         jTableLibrosArriendos.getColumnModel().getColumn(0).setCellRenderer(alinear);
         jTableLibrosArriendos.getColumnModel().getColumn(1).setCellRenderer(alinear);
         jTableLibrosArriendos.getColumnModel().getColumn(2).setCellRenderer(alinear);
         jTableLibrosArriendos.getColumnModel().getColumn(3).setCellRenderer(alinear);
         jTableLibrosArriendos.getColumnModel().getColumn(4).setCellRenderer(alinear);
        }
    }

 /**
 * método       : buscarFolio
 * entrada      : null
 * salida       : numero siguiente folio libre 
 * descripcion  : busca folio siguiente para asignar al arriendo
 */


    
    private void buscarFolio(){
        ControladorArriendos cArriendos = new ControladorArriendos();
        folioComprobanteArriendo = cArriendos.buscarFolio(); 
        folioComprobanteArriendo++;
        String formatoFolio="00000"+String.valueOf(folioComprobanteArriendo).trim();
        int x = formatoFolio.length();
        txtFolio.setText(formatoFolio.substring(x-6,x));

    }
    
 /**
 * método       : poblarCalendario
 * entrada      : String
 * salida       : boolean 
 * descripcion  : valida número 
 */

    private void poblarCalendario(){
        try{
        for(int d=1;d<32;d++){
            cmbDiaProceso.addItem(String.valueOf(d));
        }
        for(int m=1;m<13;m++){
            cmbMesProceso.addItem(String.valueOf(m));
        }
    
        for(int a=yearSistema;a>2000;a--){
            cmbYearProceso.addItem(String.valueOf(a));
        }
       
        cmbDiaProceso.setSelectedIndex(diaSistema-1);
        cmbMesProceso.setSelectedIndex(mesSistema-1);
        cmbYearProceso.setSelectedIndex(0);
        generaFechaDeEntrega();
        }catch(Exception e){
            //JOptionPane.showMessageDialog(null, "fecha:"+diaSistema+"/"+mesSistema+"/"+yearSistema, "",0);
        }
    }
    
    private DefaultListModel modelListA(String libroArrendado){
   
        int l = modelCL.getSize();
        boolean existe = false;
        
        // el valor del item libro es sumado o restado al acumualor

        String lC = libroArrendado;
        int largo = lC.length();
        int subTotal = 0;
        String valorItem = lC.substring(lC.indexOf("+")+2,largo).trim();
        if(esNumero(valorItem)){
            subTotal = Integer.parseInt(valorItem);
        }
        
        // controla que siempre haya un autor seleccionado
        while(l>0){
            if (modelCL.get(l-1).equals(libroArrendado)){
                existe = true;
                break;
            }
            l--;
        }
        if (existe){
            modelCL.removeElement(libroArrendado);
            librosArrendados--;
            totalArriendo = totalArriendo - subTotal;
        }else{
            modelCL.addElement(libroArrendado);
            librosArrendados++;
            totalArriendo = totalArriendo + subTotal;
        }       
        calculaTotalArriendo(totalArriendo);
        if(librosArrendados<1){
            cambiarSerie();
        }
        return modelCL;
        
    }
    
 /**
 * método       : poblarFormaPago
 * entrada      : null
 * salida       : null
 * descripcion  : valida número 
 */
    private void poblarFormaPago(){
        cmbFormaPago.addItem("Efectivo");
        cmbFormaPago.addItem("Cheque");
        cmbFormaPago.addItem("Cuotas");
    }
    
 /**
 * método       : poblarCuotas
 * entrada      : null
 * salida       : bullboolean 
 * descripcion  : valida número 
 */
 
    private void poblarCuotas(){
        cmbCuotas.addItem("3 cuotas Precio Contado");
        cmbCuotas.addItem("6 cuotas Precio Contado");
    }
  
 /**
 * método       : poblarClientes
 * entrada      : void
 * salida       : void 
 * descripcion  : llena combobox cliente  
 */
    private void poblarClientes(){
        ControladorPersona cD = new ControladorPersona();
        ArrayList<Personas> lista = cD.consultarTodo();
        comboClientes = new DefaultComboBoxModel();
        String estado;
        for (Personas p : lista) {
            // dependiente = 1
            if(p.getTipo_persona()!=1){  
                if(p.getEstado()==1){
                    estado = "vigente"; 
                    comboClientes.addElement(p.getNombre()+"("+p.getId_persona_rut()+")"+"["+estado+"]");
                    cmbCliente.setModel(comboClientes);
                }
            }
        }        
    }
    
 /**
 * método       : poblarDependientes
 * entrada      : String
 * salida       : boolean 
 * descripcion  : poblar combox dependientes 
 */

    private void poblarDependientes(){
        ControladorPersona cD = new ControladorPersona();
        ArrayList<Personas> lista = cD.consultarTodo();
        comboDependientes = new DefaultComboBoxModel();
        String estado;
        for (Personas p : lista) {
            // cliente = 0
            if(p.getTipo_persona()>0){
                if(p.getEstado()==1){
                    estado = "vigente"; 
           
                    comboDependientes.addElement(p.getNombre()+"("+p.getId_persona_rut()+")"+"["+estado+"]");
                    cmbDependiente.setModel(comboDependientes);
                }
            }    
        }        
    }
    
    
    private void btnActualizarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarClienteActionPerformed
        // TODO add your handling code here:
        poblarClientes();
    }//GEN-LAST:event_btnActualizarClienteActionPerformed

    private void btnAgregaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregaClienteActionPerformed
        // TODO add your handling code here:
        
        if (!fp.isVisible()){
            fp.setVisible(true);    
        }
    }//GEN-LAST:event_btnAgregaClienteActionPerformed

    /**
 * método       : validaFecha
 * entrada      : Wntwro
 * salida       : boolean 
 * descripcion  : genera tope del mes segun fecha 
 */

    private boolean validaFecha(){
        topeDiaMes=0;
            
        if(mes==1 || mes==3 || mes==5 || mes==7 || mes ==8 || mes==10 || mes==12){
            topeDiaMes = 31;
        }
        if(mes==2 || mes==4 || mes==6 || mes==9 || mes ==11){
            topeDiaMes = 30;
        }
        if(mes==2){
            topeDiaMes = 28;
        }
        if((year%4==0) & mes==2){
            topeDiaMes = 29;    
        }
        if(dia>topeDiaMes){
            return false;
        }
        return true;
    }
    
    
    private void btnAgregarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarLibroActionPerformed
        // TODO add your handling code here:
        if(enArriendo>0){
        if(!esNumero(txtSerie.getText()) || !esNumero(txtPrecioArriendoDiario.getText()) || 
                     txtTituloLibro.getText().isEmpty()){
            // error numeros o titulo vacios por no elección de libro
            if(txtTituloLibro.getText().isEmpty()){
                // se cancelo la creación de libro nuevo
                cambiarSerie();
            }else{
                JOptionPane.showMessageDialog(null, "Error!, Sólo se aceptan valores númericos", "",1);
            }        
        }else{
            try{
                // verifica stock a rebajar segun cantidad ngresafda
                String serieLibro = txtSerie.getText();
                
                int cantidad = 1;
                if (stockReal<=cantidad){
                    JOptionPane.showMessageDialog(null, "Atención!, Cantidad ingresada supera Stock del libro: "+serieLibro, "",1);
                }else{
                    // controla conversion de numeros
                    
                    int precioArriendoDiario = Integer.parseInt(txtPrecioArriendoDiario.getText());
                    int subTotal = precioArriendoDiario * cantidad;
                    calculaTotalArriendo(subTotal);
                    String libro="";
                    // formatea titulo de libros
 
                    String titulo = txtTituloLibro.getText();
                    int lt = titulo.length();
                    if (lt>20){
          	    libro = titulo.substring(0, 21);
                  	}else{
                        libro = titulo.format("%-20s", titulo);
                    }
                    String p = String.valueOf(precioArriendoDiario);
                    String c = String.valueOf(cantidad);        
                    String s = String.valueOf(subTotal);
                        
                    String cantidadLibro = c.format("%-5s", c);
                    String precioLibro = p.format("%-10s", p);
                    String subtotalLibro = s.format("%-15s", s);
                    String libroComprado = libro+"("+serieLibro+")"+" #"+cantidadLibro+"$"+precioLibro+"+$"+subtotalLibro;                          
                    jListLibros.setModel(modelListA(libroComprado));
                    btnLimpiar.setEnabled(true);
                    cambiarSerie();
                    
                    txtPrecioArriendoDiario.setText("");
                    txtTituloLibro.setText("");
                    txtSerie.setText("");
                }   
            }catch(Exception ex){
                    JOptionPane.showMessageDialog(null, "Error!, Revise cantidad ingresadas", "",1);
            }
            
        }
        
        }else{
            // no ha confirmado el libro
            JOptionPane.showMessageDialog(null, "Atención!, Debe Confirmar La Serie del Libro", "",1);
            cmbDiaProceso.setFocusable(true);            
        }
              
    }//GEN-LAST:event_btnAgregarLibroActionPerformed
        
        
 
    /**
 * método       : clculaTotalArriendo
 * entrada      : int
 * salida       : void 
 * descripcion  : cacula el total por el arriendo 
 */

    private void calculaTotalArriendo(int subTotal){
        float ivaParametro = (float)ImpuestoIva;
        float divisor = 100f;
        float porciento = 1f;

        ivaParametro = ivaParametro / divisor;
        ivaParametro = ivaParametro + porciento;

        
        int subTotalParcial = subTotal;
        subTotalParcial = subTotalParcial * Integer.parseInt(txtDiasContabilizados.getText());
        txtSubtotal.setText(String.valueOf(subTotal));
        
        float real = subTotalParcial / ivaParametro;
        
        int neto = (int)real;
        int iva = subTotalParcial - neto;
        txtNeto.setText(String.valueOf(neto));
        txtIva.setText(String.valueOf(iva));
        txtTotal.setText(String.valueOf(subTotalParcial));
        txtTotal.setHorizontalAlignment(JTextField.RIGHT);
        txtNeto.setHorizontalAlignment(JTextField.RIGHT);
        txtIva.setHorizontalAlignment(JTextField.RIGHT);
    }
        
        
    private boolean esNumero(String dato){
        try{
            int cambio = Integer.parseInt(dato);
            if(cambio==0){
                return false;
            }
            return true;
        }catch(NumberFormatException ex){
            return false;
        }
    }
    
    private void txtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClienteActionPerformed
        // TODO add your handling code here:
        
        txtCliente.setText(cmbCliente.getItemAt(cmbCliente.getSelectedIndex()));
        
    }//GEN-LAST:event_txtClienteActionPerformed

    private void cmbFormaPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFormaPagoActionPerformed
        // TODO add your handling code here:
        if(cmbFormaPago.getItemAt(cmbFormaPago.getSelectedIndex()).equals("Cuotas")){
            cmbCuotas.setEnabled(true);
        }else{
            cmbCuotas.setEnabled(false);
        }
    }//GEN-LAST:event_cmbFormaPagoActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        limpiar();
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnRegistrarArriendoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarArriendoActionPerformed
        // TODO add your handling code here:
        if(enArriendo>0){
            
        if(validaFecha()){   
            if(txtFolio.getText().isEmpty() || txtTotal.getText().isEmpty() || txtNeto.getText().isEmpty() ||
                 txtNeto.getText().isEmpty() || modelCL.size() < 1 || txtSubtotal.getText().isEmpty() ||
                  txtDiasDeArriendo.getText().isEmpty() ||  txtCliente.getText().isEmpty() || 
                            labelFechaDevolucion.getText().isEmpty() ||  txtDependiente.getText().isEmpty()){
                if(modelCL.size()<1){
                    JOptionPane.showMessageDialog(null, "Atención!, debe ingresar Libros", "",1);
                    txtSerie.setFocusable(true);}
                if(txtCliente.getText().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Atención!, debe ingresar Cliente", "",1);
                    }
                if(txtDependiente.getText().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Atención!, debe ingresar Dependiente", "",1);
                }
                if(txtDiasDeArriendo.getText().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Atención!, debe ingresar Días de Arriendo", "",1);
                }
                if(labelFechaDevolucion.getText().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Atención!, debe señalar Días de Arriendo", "",1);
                }
                
            }else{
                if(esNumero(txtFolio.getText()) & esNumero(txtSubtotal.getText())){
                    generaFechaDeEntrega();
                    String cCliente = txtCliente.getText();
                    id_cliente = Integer.parseInt(cCliente.substring(cCliente.indexOf("(") + 1, cCliente.indexOf(")"))); 
                    String cDependiente = txtDependiente.getText();
                    int id_dependiente = Integer.parseInt(cDependiente.substring(cDependiente.indexOf("(") + 1, cDependiente.indexOf(")"))); 
                    ControladorArriendos cA = new ControladorArriendos();
                    ControladorPersona cP = new ControladorPersona();
                    if(cP.leer(id_cliente)==null || cP.leer(id_dependiente)==null){
                        JOptionPane.showMessageDialog(null, 
                                "Atención!, Cliente o Dependiente no existente, revise ingreso", "",1);
                    }else{
                        // ARRIENDO Y COMPROBANTE NUEVO
                        int folio = Integer.parseInt(txtFolio.getText());
                        int total = Integer.parseInt(txtTotal.getText());
                        //int titulo = Integer.parseInt(txtTitulo.getText());
                        String serie = txtSerie.getText();
                        int fpago, cuotas = 1;
                        if(cmbFormaPago.getItemAt(cmbFormaPago.getSelectedIndex()).equals("Efectivo")){
                            fpago = 1;
                        }else{
                            if(cmbFormaPago.getItemAt(cmbFormaPago.getSelectedIndex()).equals("Cheque")){
                                fpago = 2;
                        }else{
                                fpago = 3;
                                if(cmbCuotas.getItemAt(cmbCuotas.getSelectedIndex()).equals("3 cuotas Precio Contado")){
                                    //
                                    cuotas = 3;
                                }else{
                                    //
                                    cuotas = 6;
                                }
                            }
                        }
                        //se debe restar 1 a los valores para generar indixe adecuado
                        dia = Integer.parseInt(cmbDiaProceso.getItemAt(cmbDiaProceso.getSelectedIndex()));
                        mes = Integer.parseInt(cmbMesProceso.getItemAt(cmbMesProceso.getSelectedIndex()));
                        year = Integer.parseInt(cmbYearProceso.getItemAt(cmbYearProceso.getSelectedIndex()));
                        fechaHoy = cal.get(Calendar.DATE)+"/"+cal.get(Calendar.MONTH)+"/"+cal.get(Calendar.YEAR);
                        //hora = cal.get(Calendar.HOUR_OF_DAY)+":"+cal.get(Calendar.MINUTE)+":"+cal.get(Calendar.SECOND);
                        hArriendo = cal.get(Calendar.HOUR_OF_DAY);
                        mArriendo = cal.get(Calendar.MINUTE);
                        sArriendo = cal.get(Calendar.SECOND);
                        String laHora = String.valueOf(hArriendo)+":"+String.valueOf(mArriendo)+":"+String.valueOf(sArriendo);
                        // estado del arriendo, 2=estraviado, 1=en arriendo, 0=devuelto
                        int suEstado = 1;
                        Time hora = Time.valueOf(laHora);
                        generaFechaDeEntrega();
                        Arriendos nuevoArriendo= new Arriendos(folioComprobanteArriendo,total,dia,mes,year,
                                   diaDevolucion,mesDevolucion,yearDevolucion,diaDevolucion,mesDevolucion,
                                   yearDevolucion, id_cliente,id_dependiente,fpago,cuotas,librosArrendados, 
                                   suEstado);
                        
                        if(cA.agregar(nuevoArriendo)){
                            //recupera id generado por nueva compra, busca por folio y distribuidor
                            ControladorArriendosDetalle cArriendoDetalle = new ControladorArriendosDetalle();
                            // grabar libros arriendolibro
                            int serieLibro, cantidad, precio;
                           
                            while(librosArrendados>0){
                                //serieLibro=listaLibrosComprados[librosComprados-1];
                                String libroArrendado = modelCL.get(librosArrendados-1).toString();
                                serieLibro = Integer.parseInt((libroArrendado.substring(libroArrendado.indexOf("(") + 1, libroArrendado.indexOf(")"))).trim());
                                cantidad = Integer.parseInt((libroArrendado.substring(libroArrendado.indexOf("#") + 1, libroArrendado.indexOf("$"))).trim());
                                precio = Integer.parseInt((libroArrendado.substring(libroArrendado.indexOf("$") + 1, libroArrendado.indexOf("+"))).trim());
                                String tituloLibro = libroArrendado.substring(0, libroArrendado.indexOf("(")).trim(); 
                                //serie string pra consulta existencia
                                String str_Serie = String.valueOf(serieLibro);
                                
                                //consulta stock
                                ControladorLibros cLibros = new ControladorLibros();
                                
                                //actualiza stock
                                    
                                nuevoStockArriendo = enArriendo + cantidad;
                                
                                if(!cLibros.actualizaStockArriendos(str_Serie, nuevoStockArriendo)){
                                    //error no se actuliza stock
                                    JOptionPane.showMessageDialog(null, "Atención!, NO SE ACTUALIZO STOCK ARRIENDOS LIBRO", "",1);
                                }
                               
                                //graba libros vinculados a la venta
                                //se almacena cantidad y precio de cada libro comprado
                                // estado = 1 arrendado, estado = 0 devuelto, estado = 2 perdido
                                int estado = 1;
                                ArriendosDetalle arriendoDetalle = new ArriendosDetalle(folioComprobanteArriendo,
                                                             str_Serie.trim(),cantidad,precio, estado);
                               
                                if(cArriendoDetalle.agregar(arriendoDetalle)){
                                    //se graba libro vinvulado a venta
                                    //
                                }else{
                                    JOptionPane.showMessageDialog(null, "ERROR AL INTENTAR GRABAR "+arriendoDetalle, "",1);
                                    }
                               
                                librosArrendados--;
                            }
                            librosArrendados=0;
                            // grabacion exitosa
                            //busca ultimo folio boleta
                            buscarFolio(); 

                            JOptionPane.showMessageDialog(null, 
                                    "ARRIENDO SE REGISTRO EXITOSAMENTE A LAS "+hArriendo+":"+mArriendo+":"+sArriendo+" Hr.", "",1);
                            limpiar();
                        }else{
                            // no fue posible grabar
                            JOptionPane.showMessageDialog(null, "Error!, NO SE REGISTRO ARRIENDO", "",1);
                        }
                    }
                }else{
                    JOptionPane.showMessageDialog(null, 
                            "Atención!, Los días de arriendo deben ser numericos y positivos", "",1);
                    txtSubtotal.setFocusable(true);
                }    
            }
            }else{
                // fecha no válida
                JOptionPane.showMessageDialog(null, "Atención!, Fecha no válida", "",1);
                cmbDiaProceso.setFocusable(true);
        }
        }else{
            // no ha confirmado el libro
                JOptionPane.showMessageDialog(null, "Atención!, Debe Confirmar La Serie del Libro", "",1);
                cmbDiaProceso.setFocusable(true);            
        }
    }//GEN-LAST:event_btnRegistrarArriendoActionPerformed

    private void poblarLibrosArrendados(){
    
    listaLibrosArrendados = new int[librosArrendados];
    while(librosArrendados>0){
            String l = modelCL.get(librosArrendados-1).toString();
            int serieLibro = Integer.parseInt(l.substring(l.indexOf("(") + 1, l.indexOf(")")));
            listaLibrosArrendados[librosArrendados-1]=serieLibro;
            librosArrendados--;
        }
}
    
    
    private void cmbYearProcesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbYearProcesoActionPerformed
        // TODO add your handling code here:
        if(year != Integer.parseInt(cmbYearProceso.getItemAt(cmbYearProceso.getSelectedIndex()))){
            year = Integer.parseInt(cmbYearProceso.getItemAt(cmbYearProceso.getSelectedIndex()));
            generaFechaDeEntrega();
        }
    }//GEN-LAST:event_cmbYearProcesoActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        limpiar();
      
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void cmbMesProcesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMesProcesoActionPerformed
        // TODO add your handling code here:
        if(mes != Integer.parseInt(cmbMesProceso.getItemAt(cmbMesProceso.getSelectedIndex()))){
            mes = Integer.parseInt(cmbMesProceso.getItemAt(cmbMesProceso.getSelectedIndex()));
            generaFechaDeEntrega();
        }
    }//GEN-LAST:event_cmbMesProcesoActionPerformed

    private void cmbClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClienteActionPerformed
        // TODO add your handling code here:
       
        txtCliente.setText(cmbCliente.getItemAt(cmbCliente.getSelectedIndex()));
        String r = txtCliente.getText();
        int rut = Integer.parseInt(r.substring(r.indexOf("(") + 1, r.indexOf(")")));
        ControladorPersona cC = new ControladorPersona();
        Personas persona = cC.leer(rut);
        if(!(persona==null)){
            //rut encontrado
            if(persona.getEstado()==3){
                //el cliente esta bloqueado por morosidad
                JOptionPane.showMessageDialog(null, "Atención!, Cliente moroso, no puede arrendar", "",1);
                txtCliente.setText("");
            }
        }
        
    }//GEN-LAST:event_cmbClienteActionPerformed

        
    private boolean buscarLibroEnLista(String serie){
        int l = modelCL.getSize();
        boolean existe = false;
        String s, serieEnLista;
        // el valor del item libro es sumado o restado al acumualo 
        //String valorItem = lC.substring(lC.indexOf("+")+2,largo).trim();
        // controla que siempre haya un autor seleccionado
        while(l>0){
            s = String.valueOf(modelCL.get(l-1));
            serieEnLista = s.substring(s.indexOf("(") + 1, s.indexOf(")")).trim();
            txtSerie.setFocusable(true);
            if (serieEnLista.equals(serie)){
                existe = true;
                JOptionPane.showMessageDialog(null, "Atención, La Serie ya se incorporó en lista de libros en arriendo: "+serieEnLista, "",1);
                break;
            }
            l--;
        }
        return existe;
    }
    
    
    
 /**
 * método       : txtSerieeActionPerformed
 * entrada      : evento enter
 * salida       : void
 * descripcion  : agrega libro a lista de libros en arriendo
 */
 
    private void txtSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSerieActionPerformed
        // TODO add your handling code here:
        
        if(esNumero(txtSerie.getText())){
            ControladorLibros cL = new ControladorLibros();
            Libros libroEncontrado = cL.leer(txtSerie.getText());
            if(libroEncontrado!=null){
                if(!buscarLibroEnLista(txtSerie.getText().trim())){
                txtTituloLibro.setText(libroEncontrado.getTitulo());
                txtPrecioArriendoDiario.setText(String.valueOf(libroEncontrado.getPrecioArriendo()));
                txtPrecioArriendoDiario.setHorizontalAlignment(JTextField.RIGHT);
                txtSerie.setEditable(false);
                txtPrecioArriendoDiario.setEnabled(true);
               
                txtTituloLibro.setEnabled(true);
                txtTituloLibro.setEditable(false);
                //lee libros errendados
                stockLibro = libroEncontrado.getStock();
                enArriendo = libroEncontrado.getEnArriendo();                           
                stockReal = stockLibro - enArriendo;
                if(stockReal > 0){
                    labelStock.setText("en Stock: "+String.valueOf(stockReal));
                }else{
                    labelStock.setText("No hay Stock");
                }
                
                }else{
                    cambiarSerie();
                }
            }else{
                //libro no existe se puede grabar sin datos
                //txtTitulo.setText(JOptionPane.showInputDialog (null,
                       // "Título para asociar a Serie ?","Libro No Hallado",JOptionPane.QUESTION_MESSAGE));
                JOptionPane.showMessageDialog(null, "Atención!, Libro según SERIE no existe", "",1);
                txtSerie.setFocusable(true);
            }
            
        }else{
            //no es serie válido
            JOptionPane.showMessageDialog(null, "Atención!, SERIE debe ser numérico y positivo", "",1);
            txtSerie.setFocusable(true);
        }
        
    }//GEN-LAST:event_txtSerieActionPerformed

    private void jListLibrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListLibrosMouseClicked
        // TODO add your handling code here:
        String libroBorrar=jListLibros.getSelectedValue();
        //jListLibrosComprados.getSelectedIndex());
        if(libroBorrar!=null){
            jListLibros.setModel(modelListA(libroBorrar));
        }
        
    }//GEN-LAST:event_jListLibrosMouseClicked

    private void txtFolioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFolioActionPerformed
        // TODO add your handling code here:
   
        }
        
    {       
    }//GEN-LAST:event_txtFolioActionPerformed

    private void txtNetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNetoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNetoActionPerformed

    private void btnCambiaSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCambiaSerieActionPerformed
        // TODO add your handling code here:
        cambiarSerie();
    }//GEN-LAST:event_btnCambiaSerieActionPerformed

    private void txtIvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIvaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIvaActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void txtDependienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDependienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDependienteActionPerformed

    private void cmbDependienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDependienteActionPerformed
        // TODO add your handling code here:
        
        String d = cmbDependiente.getItemAt(cmbDependiente.getSelectedIndex());
        txtDependiente.setText(d.substring(0, d.indexOf(")")+1));

        
    }//GEN-LAST:event_cmbDependienteActionPerformed

    private void btnActualizarDependienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarDependienteActionPerformed
        // TODO add your handling code here:
      
        poblarDependientes();
        
    }//GEN-LAST:event_btnActualizarDependienteActionPerformed

    private void btnAgregaDependienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregaDependienteActionPerformed
        // TODO add your handling code here:
       
        if (!fp.isVisible()){
            fp.setVisible(true);    
        }
    }//GEN-LAST:event_btnAgregaDependienteActionPerformed

    private void cmbDiaProcesoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDiaProcesoActionPerformed
        // TODO add your handling code here:
        if(dia != Integer.parseInt(cmbDiaProceso.getItemAt(cmbDiaProceso.getSelectedIndex()))){
            dia = Integer.parseInt(cmbDiaProceso.getItemAt(cmbDiaProceso.getSelectedIndex()));
            generaFechaDeEntrega();
        }
    }//GEN-LAST:event_cmbDiaProcesoActionPerformed

    private void txtSubtotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSubtotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSubtotalActionPerformed

    private void txtDiasDeArriendoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiasDeArriendoActionPerformed
        // TODO add your handling code here:
        if(esNumero(txtDiasDeArriendo.getText())){
            txtDiasContabilizados.setText(txtDiasDeArriendo.getText());
            generaFechaDeEntrega();
            if(esNumero(txtSubtotal.getText())){
                int subtotal = Integer.parseInt(txtSubtotal.getText());
                calculaTotalArriendo(subtotal);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Atención!, Días Arriendo debe ser número y positivo", "",1);
            txtDiasDeArriendo.setText("1");
            txtDiasDeArriendo.setFocusable(true);
        }
    }//GEN-LAST:event_txtDiasDeArriendoActionPerformed

    private void txtDiasContabilizadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiasContabilizadosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiasContabilizadosActionPerformed

    private void txtDiasDeArriendoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDiasDeArriendoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiasDeArriendoFocusLost

    private void jTableLibrosArriendosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableLibrosArriendosMouseClicked
        // TODO add your handling code here:

        txtSerie.setText(String.valueOf(modelTableArriendos.getValueAt(jTableLibrosArriendos.getSelectedRow(),0)));
        txtTituloLibro.setText(String.valueOf(modelTableArriendos.getValueAt(jTableLibrosArriendos.getSelectedRow(),2)));
        txtPrecioArriendoDiario.setText(String.valueOf(modelTableArriendos.getValueAt(jTableLibrosArriendos.getSelectedRow(),4)));

    }//GEN-LAST:event_jTableLibrosArriendosMouseClicked

    private void txtSerieKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSerieKeyReleased
        // TODO add your handling code here:
        llenarTablaConLibros("id_libro_serie",txtSerie.getText());
    }//GEN-LAST:event_txtSerieKeyReleased

  /**
 * método       : generaFechaDeEntrega
 * entrada      : void
 * salida       : void 
 * descripcion  : poblar combox dependientes 
 */
    private void generaFechaDeEntrega(){
                // GENERA FECHA DE ENTREGA
        if(this.isActive()){
            if(validaFecha()){      
                    diaDevolucion = dia;
                    mesDevolucion = mes;
                    yearDevolucion = year;
                    diasDeArriendo=Integer.parseInt(txtDiasDeArriendo.getText());
                   
                    for(int d=0;d<diasDeArriendo;d++){
                        diaDevolucion=diaDevolucion+1;
                        if(diaDevolucion>topeDiaMes){
                            diaDevolucion=1;
                            mesDevolucion=mesDevolucion+1;
                            if (mesDevolucion>12){
                                mesDevolucion=1;
                                yearDevolucion=yearDevolucion+1;
                            }
                        }
                    }
                    //genera fecha retorno;
                    labelFechaDevolucion.setText(String.valueOf(diaDevolucion)+
                            "/"+String.valueOf(mesDevolucion)+"/"+String.valueOf(yearDevolucion));                
            }else{
                // fecha ingresada no es válida
                JOptionPane.showMessageDialog(null, "Atención!, FECHA INGRESADA NO ES VALIDA", "",1);
            }
        } 
    }
    
 /**
 * método       : cambiaSerie
 * entrada      : String
 * salida       : boolean 
 * descripcion  : poblar combox dependientes 
 */

    private void cambiarSerie(){
        txtTituloLibro.setText("");
       
        txtPrecioArriendoDiario.setText("");
        txtSerie.setText("");
       
        txtPrecioArriendoDiario.setEnabled(false);
        txtSerie.setEditable(true);
        labelStock.setText("");
    } 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FArriendosLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FArriendosLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FArriendosLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FArriendosLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FArriendosLibros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarCliente;
    private javax.swing.JButton btnActualizarDependiente;
    private javax.swing.JButton btnAgregaCliente;
    private javax.swing.JButton btnAgregaDependiente;
    private javax.swing.JButton btnAgregarLibro;
    private javax.swing.JButton btnCambiaSerie;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnRegistrarArriendo;
    private javax.swing.JComboBox<String> cmbCliente;
    private javax.swing.JComboBox<String> cmbCuotas;
    private javax.swing.JComboBox<String> cmbDependiente;
    private javax.swing.JComboBox<String> cmbDiaProceso;
    private javax.swing.JComboBox<String> cmbFormaPago;
    private javax.swing.JComboBox<String> cmbMesProceso;
    private javax.swing.JComboBox<String> cmbYearProceso;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList<String> jListLibros;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JTable jTableLibrosArriendos;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JLabel labelFechaDevolucion;
    private javax.swing.JLabel labelStock;
    private javax.swing.JLabel lbFechaSistema;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtDependiente;
    private javax.swing.JTextField txtDiasContabilizados;
    private javax.swing.JTextField txtDiasDeArriendo;
    private javax.swing.JTextField txtFolio;
    private javax.swing.JTextField txtIva;
    private javax.swing.JTextField txtNeto;
    public static javax.swing.JTextField txtPrecioArriendoDiario;
    private javax.swing.JTextField txtSerie;
    private javax.swing.JTextField txtSubtotal;
    public static javax.swing.JTextField txtTituloLibro;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
