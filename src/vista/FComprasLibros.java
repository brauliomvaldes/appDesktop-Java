/**
 * fecha de creacion: junio de 2018
 * nombre: FComprasLibros
 * Su función Realizar compras de libros
 * entrada datos de la compra
 * salida null
 * @author: braulio valdes 
 */
package vista;

import controlador.ControladorCompras;
import controlador.ControladorComprasDetalle;
import controlador.ControladorDistribuidor;
import controlador.ControladorLibros;
import controlador.ControladorParametros;
import java.awt.Color;
import java.sql.Date;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import modelo.Compras;
import modelo.ComprasDetalle;
import modelo.Distribuidores;
import modelo.Libros;
import modelo.Parametros;
import static vista.MenuPrincipalBiblioteca.cal;
import static vista.MenuPrincipalBiblioteca.diaSistema;
import static vista.MenuPrincipalBiblioteca.mesSistema;
import static vista.MenuPrincipalBiblioteca.yearSistema;

/**
 *
 * @author BRAULIOMARIANO
 */
public class FComprasLibros extends javax.swing.JFrame {
    
    //variable para almacenar libro creado en mantenedor de libros durante la compra
   
    FDistribuidor fd = new FDistribuidor();
    DefaultComboBoxModel comboDistribuidor;
    DefaultListModel modelCL = new DefaultListModel();
    String hora, fechaHoy;
    Date fechaFactura;
    int dia, mes, year, hCompra, mCompra, sCompra, totalCompra;
    int[] listaLibrosComprados;
    int librosComprados, antiguoStock, nuevoStock, nuevoPrecio;
    int ImpuestoIva;
 
    
    /**
     * Creates new form FComprasLibros
     */
    public FComprasLibros() {
        initComponents();
        //this.setAlwaysOnTop(true);
        this.getContentPane().setBackground(Color.LIGHT_GRAY);
        this.setLocationRelativeTo(null);
        lbFechaSistema.setText(String.valueOf(diaSistema)+"/"+String.valueOf(mesSistema)+"/"+String.valueOf(yearSistema));    

        MenuPrincipalBiblioteca.procesoCompraLibro=false;
        cmbCuotas.setEnabled(false);
        txtTituloLibroComprado.setEditable(false);
        txtNetoCompra.setEditable(false);
        txtNetoCompra.setEnabled(false);
        txtIvaCompra.setEditable(false);
        txtIvaCompra.setEnabled(false);
        txtTotalCompra.setEditable(false);
        txtTotalCompra.setEnabled(false);
        txtTituloLibroComprado.setBackground(Color.orange);
        txtTituloLibroComprado.setEditable(false);
        btnAgregaDistribuidor.setEnabled(true);
        poblarFormaPago();
        poblarCuotas();
        poblarCalendario();
        txtDistribuidor.setEditable(false);
        leerParametros();
        limpiar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField8 = new javax.swing.JTextField();
        txtFolio = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDistribuidor = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cmbDistribuidor = new javax.swing.JComboBox<>();
        btnActualizar = new javax.swing.JButton();
        btnAgregaDistribuidor = new javax.swing.JButton();
        cmbFormaPago = new javax.swing.JComboBox<>();
        cmbCuotas = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListLibrosComprados = new javax.swing.JList<>();
        jLabel8 = new javax.swing.JLabel();
        txtSerie = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        txtTituloLibroComprado = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtNetoCompra = new javax.swing.JTextField();
        btnAgregarLibro = new javax.swing.JButton();
        btnRegistrarCompra = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        cmbDia = new javax.swing.JComboBox<>();
        cmbMes = new javax.swing.JComboBox<>();
        cmbYear = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtGlosa = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        btnCambiaSerie = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        txtTotalCompra = new javax.swing.JTextField();
        txtIvaCompra = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lbFechaSistema = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(100, 50));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtFolio.setBackground(new java.awt.Color(204, 255, 255));
        txtFolio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFolioActionPerformed(evt);
            }
        });
        getContentPane().add(txtFolio, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 192, 123, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("*");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 20, 10));

        txtDistribuidor.setBackground(new java.awt.Color(204, 255, 255));
        txtDistribuidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDistribuidorActionPerformed(evt);
            }
        });
        getContentPane().add(txtDistribuidor, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 310, -1));

        jLabel3.setText("Fecha Compra");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 227, -1, -1));

        jLabel4.setText("NETO  $");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 490, -1, -1));

        jLabel5.setText("IDENTIFIQUE DISTRIBUIDOR LIBRO");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 71, -1, -1));

        jLabel6.setText("Forma de Pago");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 263, -1, -1));

        jLabel7.setText("Número Cuotas");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 293, -1, -1));

        cmbDistribuidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDistribuidorActionPerformed(evt);
            }
        });
        getContentPane().add(cmbDistribuidor, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, 310, -1));

        btnActualizar.setText("@");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 50, 20));

        btnAgregaDistribuidor.setText("+");
        btnAgregaDistribuidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregaDistribuidorActionPerformed(evt);
            }
        });
        getContentPane().add(btnAgregaDistribuidor, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 90, -1, 20));

        cmbFormaPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFormaPagoActionPerformed(evt);
            }
        });
        getContentPane().add(cmbFormaPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 260, 123, -1));

        getContentPane().add(cmbCuotas, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 290, 123, -1));

        jListLibrosComprados.setBackground(new java.awt.Color(204, 255, 204));
        jListLibrosComprados.setForeground(new java.awt.Color(51, 51, 51));
        jListLibrosComprados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListLibrosCompradosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListLibrosComprados);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 370, 350, 254));

        jLabel8.setText("REGISTRO LIBRO");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 350, -1, -1));

        txtSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSerieActionPerformed(evt);
            }
        });
        getContentPane().add(txtSerie, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 380, 133, -1));

        jLabel9.setText("CANTIDAD");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 470, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("<DETALLE DE LIBROS INCLUIDOS EN COMPRA>");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 350, 350, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel11.setText("<MANTENEDOR COMPRA LIBROS>");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(228, 20, -1, -1));
        getContentPane().add(txtPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 440, 72, -1));
        getContentPane().add(txtTituloLibroComprado, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 410, 330, -1));

        txtCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadActionPerformed(evt);
            }
        });
        getContentPane().add(txtCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 470, 72, -1));

        jLabel12.setText("SERIE LIBRO");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 380, -1, -1));

        jLabel13.setText("TITULO LIBRO");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 410, -1, -1));

        jLabel14.setText("(IVA INCLUIDO)");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 440, -1, -1));

        txtNetoCompra.setBackground(new java.awt.Color(204, 255, 255));
        txtNetoCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNetoCompraActionPerformed(evt);
            }
        });
        getContentPane().add(txtNetoCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 490, 110, -1));

        btnAgregarLibro.setText("AGREGA LIBRO >>>");
        btnAgregarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarLibroActionPerformed(evt);
            }
        });
        getContentPane().add(btnAgregarLibro, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 380, 190, -1));

        btnRegistrarCompra.setText("Registrar Compra");
        btnRegistrarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarCompraActionPerformed(evt);
            }
        });
        getContentPane().add(btnRegistrarCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(719, 55, 140, 48));

        btnLimpiar.setText("Limpiar Campos");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(719, 109, 140, 41));

        jButton3.setText("Cerrar Mantenedor");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(719, 156, 140, 45));

        cmbDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDiaActionPerformed(evt);
            }
        });
        getContentPane().add(cmbDia, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 223, -1, -1));

        cmbMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMesActionPerformed(evt);
            }
        });
        getContentPane().add(cmbMes, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 223, -1, -1));

        cmbYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbYearActionPerformed(evt);
            }
        });
        getContentPane().add(cmbYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 223, -1, -1));

        jLabel16.setText("/");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(202, 226, -1, -1));

        jLabel17.setText("/");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(242, 226, -1, -1));

        txtGlosa.setBackground(new java.awt.Color(204, 255, 204));
        txtGlosa.setColumns(20);
        txtGlosa.setRows(5);
        jScrollPane2.setViewportView(txtGlosa);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 240, 350, 85));

        jLabel15.setText("GLOSA DESCRIPTIVA");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 220, -1, -1));

        btnCambiaSerie.setText("CAMBIA SERIE");
        btnCambiaSerie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCambiaSerieActionPerformed(evt);
            }
        });
        getContentPane().add(btnCambiaSerie, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 340, 130, -1));

        jLabel20.setText("PRECIO UNITARIO $");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 440, -1, -1));

        txtTotalCompra.setBackground(new java.awt.Color(204, 255, 255));
        txtTotalCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalCompraActionPerformed(evt);
            }
        });
        getContentPane().add(txtTotalCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 550, 110, -1));

        txtIvaCompra.setBackground(new java.awt.Color(204, 255, 255));
        txtIvaCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIvaCompraActionPerformed(evt);
            }
        });
        getContentPane().add(txtIvaCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 520, 110, -1));

        jLabel21.setText("TOTAL $");
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 550, -1, -1));

        jLabel22.setText("19% IVA $");
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 520, -1, -1));

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204)));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 480, 200, 144));

        lbFechaSistema.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbFechaSistema.setForeground(new java.awt.Color(0, 0, 255));
        lbFechaSistema.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        getContentPane().add(lbFechaSistema, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel18.setText("FOLIO FACTURA");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 195, -1, -1));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 0, 0));
        jLabel19.setText("*");
        getContentPane().add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 200, 20, 10));

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 0, 0));
        jLabel25.setText("*");
        getContentPane().add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 390, 20, 10));

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 0, 0));
        jLabel26.setText("*");
        getContentPane().add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 240, 20, 10));

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 0, 0));
        jLabel27.setText("*");
        getContentPane().add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 390, 20, 10));

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 0, 0));
        jLabel28.setText("*");
        getContentPane().add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 480, 20, 10));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void leerParametros(){
        ControladorParametros c = new ControladorParametros();
        Parametros p = c.leer(1);
        if(p==null){
            c.agregar();
        }else{
            ImpuestoIva=p.getImpuesto_iva();
        }
    }
    
    private void limpiar(){
        poblarDistribuidores();
        txtGlosa.setText("");
        txtFolio.setText("");
        txtNetoCompra.setText("");
        txtIvaCompra.setText("");
        txtTotalCompra.setText("");
        txtTituloLibroComprado.setText("");
        txtSerie.setText("");
        txtPrecio.setText("");
        txtCantidad.setText("");
        txtDistribuidor.setText("");
        txtGlosa.setEnabled(false);
        txtSerie.setEnabled(false);
        txtSerie.setEnabled(false);
        txtPrecio.setEnabled(false);
        txtCantidad.setEnabled(false);
        cmbFormaPago.setEnabled(false);
        cmbCuotas.setEnabled(false);
        cmbDia.setEnabled(false);
        cmbMes.setEnabled(false);
        cmbYear.setEnabled(false);
        txtTituloLibroComprado.setEnabled(false);
        btnAgregarLibro.setEnabled(false);
        btnCambiaSerie.setEnabled(false);
        txtFolio.setEnabled(true);   
        btnRegistrarCompra.setEnabled(false);
        btnLimpiar.setEnabled(false);
        modelCL.clear();
        librosComprados=0;
    }
    
    private void poblarCalendario(){
        
        try{
            for(int d=1;d<32;d++){
                cmbDia.addItem(String.valueOf(d));
            }
            for(int m=1;m<13;m++){
                cmbMes.addItem(String.valueOf(m));
            }
      
            for(int a=yearSistema;a>2000;a--){
                cmbYear.addItem(String.valueOf(a));
            }
            cmbDia.setSelectedIndex(diaSistema-1);
            cmbMes.setSelectedIndex(mesSistema-1);
            cmbYear.setSelectedIndex(0);
        }catch(Exception e){
            //JOptionPane.showMessageDialog(null, "fecha:"+diaSistema+"/"+mesSistema+"/"+yearSistema, "",0);
        }
    }
    
    private DefaultListModel modelListA(String libroComprado){
   
        int l = modelCL.getSize();
        boolean existe = false;
        
        // el valor del item libro es sumado o restado al acumualor

        String lC = libroComprado;
        int largo = lC.length();
        int subTotal = 0;
        String valorItem = lC.substring(lC.indexOf("+")+2,largo).trim();
        if(esNumero(valorItem)){
            subTotal = Integer.parseInt(valorItem);
        }
        
        // controla que siempre haya un autor seleccionado
        while(l>0){
            if (modelCL.get(l-1).equals(libroComprado)){
                existe = true;
                break;
            }
            l--;
        }
        if (existe){
            modelCL.removeElement(libroComprado);
            librosComprados--;
            totalCompra = totalCompra - subTotal;
        }else{
            modelCL.addElement(libroComprado);
            librosComprados++;
            totalCompra = totalCompra + subTotal;
        }       
        calculaTotalFactura(totalCompra);
        if(librosComprados<1){
            cambiarSerie();
        }
        return modelCL;
        
    }
    
    private void poblarFormaPago(){
        cmbFormaPago.addItem("Efectivo");
        cmbFormaPago.addItem("Cheque");
        cmbFormaPago.addItem("Cuotas");
    }
    
    private void poblarCuotas(){
        cmbCuotas.addItem("3 cuotas Precio Contado");
        cmbCuotas.addItem("6 cuotas Precio Contado");
    }
    
    private void poblarDistribuidores(){
        ControladorDistribuidor cD = new ControladorDistribuidor();
        ArrayList<Distribuidores> lista = cD.consultarTodo();
        comboDistribuidor = new DefaultComboBoxModel();
        String estado;
        for (Distribuidores d : lista) {
          if(d.getEstado()==1){
             estado = "vigente"; 
           
            comboDistribuidor.addElement(d.getNombre()+"("+d.getId_distribuidor_rut()+")"+"["+estado+"]");
            cmbDistribuidor.setModel(comboDistribuidor);
            }
        }        
    }
    
    
    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        poblarDistribuidores();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnAgregaDistribuidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregaDistribuidorActionPerformed
        // TODO add your handling code here:
        
        if (!fd.isVisible()){
            fd.setVisible(true);    
        }
        
        
    }//GEN-LAST:event_btnAgregaDistribuidorActionPerformed

    private boolean validaFecha(){
        int topeDiaMes=0;
            
        if(mes==1 || mes==3 || mes==5 || mes==7 || mes ==8 || mes==10 || mes==12){
            topeDiaMes = 31;
        }
        if(mes==4 || mes==6 || mes==9 || mes ==11){
            topeDiaMes = 30;
        }
        if(mes==2){
            topeDiaMes = 28;
        }
        if((year%4==0) & mes==2){
            topeDiaMes = 29;    
        }
        if(dia>topeDiaMes){
            return false;
        }
        return true;
    }
    
    
    private void btnAgregarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarLibroActionPerformed
        // TODO add your handling code here:

        if(!esNumero(txtSerie.getText()) || !esNumero(txtPrecio.getText()) || 
                    !esNumero(txtCantidad.getText()) || txtTituloLibroComprado.getText().isEmpty()){
            // error numeros o titulo vacios por no elección de libro
            if(txtTituloLibroComprado.getText().isEmpty()){
                // se cancelo la creación de libro nuevo
                cambiarSerie();
            }else{
                JOptionPane.showMessageDialog(null, "Atención!, Ingresar Serie númerico y positivo", "",1);
            }        
        }else{
            try{
                // controla conversion de numeros
                String serieLibro = txtSerie.getText();
                int precio = Integer.parseInt(txtPrecio.getText());
                int cantidad = Integer.parseInt(txtCantidad.getText());
                int subTotal = precio * cantidad;
                
                calculaTotalFactura(subTotal);
                String libro="";
                // formatea titulo de libros
 
                String titulo = txtTituloLibroComprado.getText();
	        int lt = titulo.length();
                if (lt>20){
          	    libro = titulo.substring(0, 21);
              	}else{
                    libro = titulo.format("%-20s", titulo);
                }
                String p = String.valueOf(precio);
                String c = String.valueOf(cantidad);        
                String s = String.valueOf(subTotal);
                        
                String cantidadLibro = c.format("%-5s", c);
                String precioLibro = p.format("%-10s", p);
                String subtotalLibro = s.format("%-15s", s);
               	String libroComprado = libro+"("+serieLibro+")"+" #"+cantidadLibro+"$"+precioLibro+"+$"+subtotalLibro;                          
               	jListLibrosComprados.setModel(modelListA(libroComprado));
                cambiarSerie();
                
            }catch(Exception ex){
                JOptionPane.showMessageDialog(null, "Atención!, Revise cantidad ingresada", "",1);
                
            }
            txtCantidad.setText("");
            txtPrecio.setText("");
            txtTituloLibroComprado.setText("");
            txtSerie.setText("");
        }
    }//GEN-LAST:event_btnAgregarLibroActionPerformed
        
        
    private void calculaTotalFactura(int subTotal){

        float ivaParametro = (float)ImpuestoIva;
        float divisor = 100f;
        float porciento = 1f;

        ivaParametro = ivaParametro / divisor;
        ivaParametro = ivaParametro + porciento;

        float real = subTotal / ivaParametro;
        int neto = (int)real;
        int iva = subTotal - neto;
        txtNetoCompra.setText(String.valueOf(neto));
        txtIvaCompra.setText(String.valueOf(iva));
        txtTotalCompra.setText(String.valueOf(subTotal));
        txtTotalCompra.setHorizontalAlignment(JTextField.RIGHT);
        txtNetoCompra.setHorizontalAlignment(JTextField.RIGHT);
        txtIvaCompra.setHorizontalAlignment(JTextField.RIGHT);
    }
        
        
    private boolean esNumero(String dato){
        try{
            int cambio = Integer.parseInt(dato);
            if(cambio==0){
                return false;
            }
            return true;
        }catch(NumberFormatException ex){
            return false;
        }
    }
    
    private void txtDistribuidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDistribuidorActionPerformed
        // TODO add your handling code here:
        
        txtDistribuidor.setText(cmbDistribuidor.getItemAt(cmbDistribuidor.getSelectedIndex()));
        
    }//GEN-LAST:event_txtDistribuidorActionPerformed

    private void cmbFormaPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFormaPagoActionPerformed
        // TODO add your handling code here:
        if(cmbFormaPago.getItemAt(cmbFormaPago.getSelectedIndex()).equals("Cuotas")){
            cmbCuotas.setEnabled(true);
        }else{
            cmbCuotas.setEnabled(false);
        }
    }//GEN-LAST:event_cmbFormaPagoActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        limpiar();
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnRegistrarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarCompraActionPerformed
        // TODO add your handling code here:
        if(validaFecha()){   
            if(txtFolio.getText().isEmpty() || txtTotalCompra.getText().isEmpty() || txtNetoCompra.getText().isEmpty() ||
                txtNetoCompra.getText().isEmpty() || txtGlosa.getText().isEmpty() || modelCL.size() < 1){
                if(txtFolio.getText().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Atención!, debe ingresar Folio compra", "",1);
                    txtFolio.setFocusable(true);}
                if(txtGlosa.getText().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Atención!, debe ingresar Glosa", "",1);
                    txtGlosa.setFocusable(true);}
                if(modelCL.size()<1){
                    JOptionPane.showMessageDialog(null, "Atención!, debe ingresar Libros", "",1);
                    txtSerie.setFocusable(true);}                
            }else{
                if(esNumero(txtFolio.getText()) ){
                    String cd = txtDistribuidor.getText();
                    int id_distribuidor = Integer.parseInt(cd.substring(cd.indexOf("(") + 1, cd.indexOf(")"))); 
                    int folioCompra = Integer.parseInt(txtFolio.getText());
                    ControladorCompras cC = new ControladorCompras();
                    if(cC.leer(id_distribuidor,folioCompra)!=null){
                        JOptionPane.showMessageDialog(null, 
                                "Atención!, Compra registrada anteriormente, según Folio y Distribuidor", "",1);
                    }else{
                        // COMPRA Y FACTURA NUEVA
                        int folio = Integer.parseInt(txtFolio.getText());
                        int total = Integer.parseInt(txtTotalCompra.getText());
                        //int titulo = Integer.parseInt(txtTitulo.getText());
                        String serie = txtSerie.getText();
                        int fpago, cuotas = 1;
                        String glosa = txtGlosa.getText();
                        if(cmbFormaPago.getItemAt(cmbFormaPago.getSelectedIndex()).equals("Efectivo")){
                            fpago = 1;
                        }else{
                            if(cmbFormaPago.getItemAt(cmbFormaPago.getSelectedIndex()).equals("Cheque")){
                                fpago = 2;
                        }else{
                                fpago = 3;
                                if(cmbCuotas.getItemAt(cmbCuotas.getSelectedIndex()).equals("3 cuotas Precio Contado")){
                                    //
                                    cuotas = 3;
                                }else{
                                    //
                                    cuotas = 6;
                                }
                            }
                        }
                        
                        dia = Integer.parseInt(cmbDia.getItemAt(cmbDia.getSelectedIndex()));
                        mes = Integer.parseInt(cmbMes.getItemAt(cmbMes.getSelectedIndex()));
                        year = Integer.parseInt(cmbYear.getItemAt(cmbYear.getSelectedIndex()));
                        fechaHoy = cal.get(Calendar.DATE)+"/"+cal.get(Calendar.MONTH)+"/"+cal.get(Calendar.YEAR);
                        //hora = cal.get(Calendar.HOUR_OF_DAY)+":"+cal.get(Calendar.MINUTE)+":"+cal.get(Calendar.SECOND);
                        hCompra = cal.get(Calendar.HOUR_OF_DAY);
                        mCompra = cal.get(Calendar.MINUTE);
                        sCompra = cal.get(Calendar.SECOND);
                        Compras nuevaCompra = new Compras(id_distribuidor, folio,total,dia,mes,year,hCompra,
                                   mCompra, sCompra, fpago,cuotas,glosa, librosComprados);
                        
                        if(cC.agregar(nuevaCompra)){
                            //recupera id generado por nueva compra, busca por folio y distribuidor
                            Compras compraGrabada = cC.leer(id_distribuidor, folio);
                            int idCompraNueva = compraGrabada.getId_compras();
                            ControladorComprasDetalle cComprasDetalle = new ControladorComprasDetalle();
                            // grabar libros compralibro
                            int serieLibro, cantidad, precio;
                            //JOptionPane.showMessageDialog(null, "LIBROS COMPRADOS: "+librosComprados, "",0);
                            while(librosComprados>0){
                                //serieLibro=listaLibrosComprados[librosComprados-1];
                                String libroComprado = modelCL.get(librosComprados-1).toString();
                                serieLibro = Integer.parseInt((libroComprado.substring(libroComprado.indexOf("(") + 1, libroComprado.indexOf(")"))).trim());
                                cantidad = Integer.parseInt((libroComprado.substring(libroComprado.indexOf("#") + 1, libroComprado.indexOf("$"))).trim());
                                if(cantidad==0){
                                    //error no se actuliza stock
                                    JOptionPane.showMessageDialog(null, "OCURRIO UN ERROR, STOCK LIBRO = 0", "",1);
                                }
                                precio = Integer.parseInt((libroComprado.substring(libroComprado.indexOf("$") + 1, libroComprado.indexOf("+"))).trim());
                                String tituloLibro = libroComprado.substring(0, libroComprado.indexOf("(")).trim(); 
                                //serie string pra consulta existencia
                                String str_Serie = String.valueOf(serieLibro);
                                
                                //consulta stock
                                ControladorLibros cLibros = new ControladorLibros();
                                Libros libroIndicado = cLibros.leer(str_Serie.trim());
                                if(libroIndicado!=null){
                                    //actualiza stock
                                    antiguoStock = libroIndicado.getStock();
                                    nuevoStock = antiguoStock + cantidad;
                                    nuevoPrecio = precio;
                                    if(!cLibros.actualizaStockYprecio(str_Serie, nuevoStock, nuevoPrecio)){
                                        //error no se actuliza stock
                                        JOptionPane.showMessageDialog(null, "OCURRIO UN ERROR, NO SE ACTUALIZO STOCK LIBRO", "",1);
                                    }
                                    
                                    //graba libros vinculados a la compra
                                    //se almacena cantidad y precio de cada libro comprado
                                    ComprasDetalle comprasDetalle = new ComprasDetalle(idCompraNueva,str_Serie.trim(),cantidad,precio);
                                    if(cComprasDetalle.agregar(comprasDetalle)){
                                        //se graba libro vinvulado a compra
                                        //
                                        //JOptionPane.showMessageDialog(null, "VINCULO LIBRO "+str_Serie+" A COMPRA", "",0);
                                    }else{
                                        JOptionPane.showMessageDialog(null, "ERROR AL INTENTAR GRABAR "+comprasDetalle, "",1);
                                    }    
                                }else{
                                        JOptionPane.showMessageDialog(null, "ERROR! libro:"+str_Serie+" no existe", "",1);
                                    }
                                librosComprados--;
                            }
                            librosComprados=0;
                            // grabacion exitosa
                            JOptionPane.showMessageDialog(null, 
                                    "COMPRA SE REGISTRO EXITOSAMENTE A LAS "+hCompra+":"+mCompra+":"+sCompra+" Hr.", "",1);
                            limpiar();
                        }else{
                            // no fue posible grabar
                            JOptionPane.showMessageDialog(null, "Error!, NO SE REGISTRO COMPRA", "",1);
                        }
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "Atención!, SERIE debe ser número y positivo", "",1);
                    txtSerie.setFocusable(true);
                }    
            }
            }else{
                // fecha no válida
                JOptionPane.showMessageDialog(null, "Atención!, Fecha no válida", "",1);
                cmbDia.setFocusable(true);
        }   
    }//GEN-LAST:event_btnRegistrarCompraActionPerformed

    private void poblarLibrosComprados(){
    
    listaLibrosComprados = new int[librosComprados];
    while(librosComprados>0){
            String l = modelCL.get(librosComprados-1).toString();
            int serieLibro = Integer.parseInt(l.substring(l.indexOf("(") + 1, l.indexOf(")")));
            listaLibrosComprados[librosComprados-1]=serieLibro;
            librosComprados--;
        }
}
    
    
    private void cmbYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbYearActionPerformed
        // TODO add your handling code here:
        
        year = Integer.parseInt(cmbYear.getItemAt(cmbYear.getSelectedIndex()));
        
    }//GEN-LAST:event_cmbYearActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        limpiar();
      
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void cmbDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDiaActionPerformed
        // TODO add your handling code here:
        
        dia = Integer.parseInt(cmbDia.getItemAt(cmbDia.getSelectedIndex()));
        
        
    }//GEN-LAST:event_cmbDiaActionPerformed

    private void cmbMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMesActionPerformed
        // TODO add your handling code here:
        
        mes = Integer.parseInt(cmbMes.getItemAt(cmbMes.getSelectedIndex()));
        
    }//GEN-LAST:event_cmbMesActionPerformed

    private void cmbDistribuidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDistribuidorActionPerformed
        // TODO add your handling code here:
        
        String d = cmbDistribuidor.getItemAt(cmbDistribuidor.getSelectedIndex());
        txtDistribuidor.setText(d.substring(0, d.indexOf(")")+1));
        
    }//GEN-LAST:event_cmbDistribuidorActionPerformed

    
    
    private void txtSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSerieActionPerformed
        // TODO add your handling code here:
        
        if(esNumero(txtSerie.getText())){
            ControladorLibros cL = new ControladorLibros();
            Libros libroEncontrado = cL.leer(txtSerie.getText());
            if(libroEncontrado!=null){
                txtTituloLibroComprado.setText(libroEncontrado.getTitulo());
                txtPrecio.setText(String.valueOf(libroEncontrado.getPrecioReferencia()));
                txtPrecio.setHorizontalAlignment(JTextField.RIGHT);
                txtSerie.setEditable(false);
            }else{
                //libro no existe se puede grabar sin datos
                //txtTitulo.setText(JOptionPane.showInputDialog (null,
                       // "Título para asociar a Serie ?","Libro No Hallado",JOptionPane.QUESTION_MESSAGE));
                FMantenedorLibro fm = new FMantenedorLibro();
                txtSerie.setEditable(false);
                MenuPrincipalBiblioteca.procesoCompraLibro=true;
                fm.setVisible(true);
                fm.btnLimpiar.setEnabled(false);
                fm.txtSerie.setEditable(false);
                fm.txtSerie.setText(txtSerie.getText());
            }
            
            txtPrecio.setEnabled(true);
            txtCantidad.setEnabled(true);
            txtTituloLibroComprado.setEnabled(true);
        }else{
            //no es serie válido
            JOptionPane.showMessageDialog(null, "Error!, SERIE DEBE SER NUMERICO", "",1);
        }
        
    }//GEN-LAST:event_txtSerieActionPerformed

    private void jListLibrosCompradosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListLibrosCompradosMouseClicked
        // TODO add your handling code here:
        String libroBorrar=jListLibrosComprados.getSelectedValue();
        //jListLibrosComprados.getSelectedIndex());
        if(libroBorrar!=null){
            jListLibrosComprados.setModel(modelListA(libroBorrar));
        }
        
    }//GEN-LAST:event_jListLibrosCompradosMouseClicked

    private void txtFolioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFolioActionPerformed
        // TODO add your handling code here:
        // valida folio que exista
        
        if(esNumero(txtFolio.getText())){ 
            if(!txtDistribuidor.getText().isEmpty()){
                int folioCompra = Integer.parseInt(txtFolio.getText());
                String cd = txtDistribuidor.getText();
                int id_distribuidor = Integer.parseInt(cd.substring(cd.indexOf("(") + 1, cd.indexOf(")")));
                ControladorCompras cC = new ControladorCompras();
                Compras compras = cC.leer(id_distribuidor, folioCompra);
                if(compras!=null){
                    JOptionPane.showMessageDialog(null, "Error!, "
                            + "Compra según Folio y Distribuidor ya esta registrada", "",1);
                    //librosComprados = compras.getNumero_libros();
                    //listaLibrosComprados = new int[librosComprados];
                    // procesa compra existente                
                }else{
                    // activa todos los campos una vez valido el folio
                    txtGlosa.setEnabled(true);
                    txtFolio.setEnabled(false);
                    txtNetoCompra.setEnabled(true);
                    txtIvaCompra.setEnabled(true);
                    txtTotalCompra.setEnabled(true);
                    
                    txtSerie.setEnabled(true);
                    cmbFormaPago.setEnabled(true);
                    cmbDia.setEnabled(true);
                    cmbMes.setEnabled(true);
                    cmbYear.setEnabled(true);
                    btnAgregarLibro.setEnabled(true);
                    btnCambiaSerie.setEnabled(true);
                    txtFolio.setEnabled(false);
                    btnActualizar.setEnabled(true);
                    btnAgregaDistribuidor.setEnabled(true);
                    btnLimpiar.setEnabled(true);
                    btnRegistrarCompra.setEnabled(true);
                    txtSerie.setEditable(true);
                }
            }else{
                // distribuidor no valido
                JOptionPane.showMessageDialog(null, "Error!, Debe seleccionar Distruidor, reintente", "",1);
            }
        }else{
            // folio no vlido
            JOptionPane.showMessageDialog(null, "Error!, Folio no válido, reintente", "",1);
        }
    }//GEN-LAST:event_txtFolioActionPerformed

    private void txtNetoCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNetoCompraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNetoCompraActionPerformed

    private void btnCambiaSerieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCambiaSerieActionPerformed
        // TODO add your handling code here:
        cambiarSerie();
    }//GEN-LAST:event_btnCambiaSerieActionPerformed

    private void txtIvaCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIvaCompraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIvaCompraActionPerformed

    private void txtTotalCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalCompraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalCompraActionPerformed

    private void txtCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadActionPerformed
        // TODO add your handling code here:
        txtCantidad.setHorizontalAlignment(JTextField.RIGHT);
    }//GEN-LAST:event_txtCantidadActionPerformed

    private void cambiarSerie(){
        txtTituloLibroComprado.setText("");
        txtCantidad.setText("");
        txtPrecio.setText("");
        txtSerie.setText("");
        txtCantidad.setEnabled(false);
        txtPrecio.setEnabled(false);
        txtSerie.setEditable(true);
    } 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FComprasLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FComprasLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FComprasLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FComprasLibros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FComprasLibros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregaDistribuidor;
    private javax.swing.JButton btnAgregarLibro;
    private javax.swing.JButton btnCambiaSerie;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnRegistrarCompra;
    private javax.swing.JComboBox<String> cmbCuotas;
    private javax.swing.JComboBox<String> cmbDia;
    private javax.swing.JComboBox<String> cmbDistribuidor;
    private javax.swing.JComboBox<String> cmbFormaPago;
    private javax.swing.JComboBox<String> cmbMes;
    private javax.swing.JComboBox<String> cmbYear;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jListLibrosComprados;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JLabel lbFechaSistema;
    public static javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtDistribuidor;
    private javax.swing.JTextField txtFolio;
    private javax.swing.JTextArea txtGlosa;
    private javax.swing.JTextField txtIvaCompra;
    private javax.swing.JTextField txtNetoCompra;
    public static javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtSerie;
    public static javax.swing.JTextField txtTituloLibroComprado;
    private javax.swing.JTextField txtTotalCompra;
    // End of variables declaration//GEN-END:variables
}
